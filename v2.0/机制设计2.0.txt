这个是我自己要准备写的一个JQ插件，使元素悬停。当前版本不打算写批量选择，未来可能会写一个float-elements支持多选。

参考：
    edge浏览器收藏《自己写JQuery插件》

接口：
    描述
        $(元素).floatElement
        (
            {
                respondTo:     该元素要响应滚动的容器
                relativeTo:    该元素定位要相对的容器/元素
                listenType:    相对容器滚动条监听方式
                top:           上边距
                bottom:        下边距
                left:          左边距
                right:         右边距
                destroy:       销毁为该元素绑定的悬停监听

                ...
            }
        );

    默认
        $(元素).floatElement
        (
            {
                respondTo:     "parent",
                relativeTo:    "parent",
                listenType:    "once",
                top:           "initial",
                bottom:        "initial",
                left:          "initial",
                right:         "initial",
                destroy:        false,

                ...
            }
        );

    全部选项
        $(元素).floatElement
        (
            {
                respondTo:      "parent"        悬停元素的父容器
                              $ respond_to      指定的容器

                relativeTo:     "parent"        悬停元素的父容器 -> 边距
                                "self"          悬停元素的初始位置 -> 偏移
                              $ relative_to     指定的容器 -> 边距

                listenType:     "once"          仅在创建监听时获取一次当前容器数据
                                "always"        对于每次滚动重新获取一次当前相对容器数据

                top:            "initial"       边距 = 0 或 偏移 = 0
                                "free"          等同于不设置，在该方向上无约束
                              $ top             指定的边距/偏移

                bottom:         "initial"
                                "free"
                              $ bottom

                left:           "initial"
                                "free"
                              $ left

                right:          "initial"
                                "free"
                              $ right

                destroy:        false          正常创建悬停
                                true           销毁为该元素绑定的悬停监听

                ...
            }
        );






机制：

    边距/偏移
        相对容器 = 别的元素 （边距）
            在一个方向：上、下、左、右
            元素该方向边与相对容器该方向边的距离
            当元素向该方向运动，并逐渐趋近相对容器边时，一旦距离缩减到定义好的约束边距，触发悬停
        相对容器 = 元素自己 （偏移）
            在一个方向：上、下、左、右
            元素在该方向位移出自己初始位置的距离
            当元素向四个方向运动，一旦远离够约束偏移，触发悬停
            其实就是：
                响应容器的滚动条在该方向移动了约束距离之后，触发悬停

    响应容器
        响应容器的意义在于，一个悬停元素可能是被多层嵌套的
        e.g.
            +---------------------------------------------------------+
            |                                                        ||
            |                                                        ||
            |                                                        ||
            |    +-------------------------------+                   ||
            |    |                              ||                   ||
            |    |        我是悬停元素           ||                   ||
            |    |                              ||                   ||
            |    |                              ||                   ||
            |    |                              ||                   ||
            |    |                              ||                   ||
            |    +＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝+                   ||
            |                                                        ||
            |                                                        ||
            |                                                        ||
            |                                                        ||
            |                                                        ||
            +＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝+

/**************************************************************************************************/

/*
    respondTo:     该元素要响应滚动的容器
*/
////////////////////////////////////////////////////////////////////////////////////////////////////
一般而言，响应滚动的容器和相对容器是同一个。







/*
    relativeTo:    该元素定位要相对的容器
*/
////////////////////////////////////////////////////////////////////////////////////////////////////
一般而言，元素总是位于相对容器内的。

//--------------------------------------------------------------------------------------------------
e.g. relativeTo: "parent"
    +-------------------------------+
    |            ↑                  | relative-container
    |    +---------------+          |
    | ← | float-element |    →    |
    |    +---------------+          |
    |                               |
    |            ↓                  |
    |                               |
    |                               |
    +-------------------------------+

    此时的初始默认各边距为：
    top_away = 100
    bottom_away = 400
    left_away = 100
    right_away = 200

    * 如果想让视窗外的元素运动到距离视窗外某距离时悬停，将该边距值设为 a视窗宽+b外部边距 即可。

//--------------------------------------------------------------------------------------------------
e.g. relativeTo: "self"
    +-------------------------------+
    |            ↑                  | just-a-container
    |    +---------------+          |
    | ← | float-element |    →    |
    |    +---------------+          |
    |                               |
    |            ↓                  |
    |                               |
    |                               |
    +-------------------------------+

    此时的初始默认各边距为：
    top_off = 0
    bottom_off = 0
    left_off = 0
    right_off = 0






/*
    listenType:    相对容器滚动条监听方式
*/
/*////////////////////////////////////////////////////////////////////////////////////////////////*/

1.once
    在为元素添加悬停时，获取相对容器的位置大小等数据，之后的所有计算都基于该初始数据。
    如果使用的是once监听类型，当悬停元素、相对容器两者中有人发生大小位置变化后，要手动删除悬停性质，再新绑定。

2.always
    响应容器的滚动条，每当触发滚动事件，获取相对容器的位置大小等数据，之后的计算基于该最新数据。






























































    内部的一些操作：
        1.设置元素定位为relative
        2.top,bottom,left,right这些值是指（元素定位值 - 容器定位值）
            元素的最上边(轴定位)距离其指定相对容器的最上边(轴定位)
            元素的最下边(轴定位)距离其指定相对容器的最下边(轴定位)
            元素的最左边(轴定位)距离其指定相对容器的最左边(轴定位)
            元素的最右边(轴定位)距离其指定相对容器的最右边(轴定位)
            * 一般来讲，元素都位于容器内
                元素上 - 容器上 > 0
                元素下 - 容器下 < 0
                元素左 - 容器左 > 0
                元素右 - 容器右 < 0
        3.允许元素在一个轴上悬停，仅当：
            元素在该轴所占长度 < 相对容器内容宽度
            * 否则元素会无限位移，容器滚动条无限拉长
            * chrome的滚动条大概在21px宽，实际操作中减掉30px的安全宽度吧
                const KEEPAWAY = 30;
                或者直接计算滚动条宽度 = 块.offsetWidth - 块.clientWidth
    需求的对象：
        要悬停的元素
        响应滚动容器
            "parent"指元素的父容器
        元素相对容器
        元素向上悬停距离
            "initial"指此插件使用时元素当前该边边距
        元素向下悬停距离
        元素向左悬停距离
        元素向右悬停距离

    内部变量：
        top_away_self       从自己的正常位置偏移开
        bottom_away_self    从自己的正常位置偏移开
        left_away_self      从自己的正常位置偏移开
        right_away_self     从自己的正常位置偏移开

    滚动条监听：
        滚动条监听有两种方式：
            1.是初始化时获取一次相对容器的位置数据，以该数据计算悬停元素的位移约束。
                如果相对容器位置发生变化，需要unbind一下scroll事件，再绑定一个新的。
            2.每当相对容器发生滚动事件时，就获取一次相对容器的位置数据，并以此计算约束。
                这种方式适合相对容器大小（宽高）经常发生变动的场合。
